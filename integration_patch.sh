#!/bin/bash

# Script para aplicar as modifica√ß√µes ao security_tool.sh

# Verificar se o script principal existe
if [[ ! -f "security_tool.sh" ]]; then
    echo "Erro: security_tool.sh n√£o encontrado no diret√≥rio atual."
    exit 1
fi

# Criar diret√≥rio para templates HTML se n√£o existir
mkdir -p html_templates

# Dar permiss√µes de execu√ß√£o aos scripts
chmod +x html_report.sh
chmod +x report_integration.sh

# Adicionar a op√ß√£o de relat√≥rios HTML ao menu principal
sed -i '/\[9\] üìä Ver Estat√≠sticas/a \  [10] üìà Relat√≥rios HTML         - Gerenciar relat√≥rios HTML' security_tool.sh
sed -i 's/\[10\] üìù Ver Logs/\[11\] üìù Ver Logs/g' security_tool.sh
sed -i 's/\[11\] üß™ Executar Testes/\[12\] üß™ Executar Testes/g' security_tool.sh
sed -i 's/\[12\] üìö Ajuda/\[13\] üìö Ajuda/g' security_tool.sh
sed -i 's/\[13\] ‚ÑπÔ∏è Sobre/\[14\] ‚ÑπÔ∏è Sobre/g' security_tool.sh
sed -i 's/\[0\] üö™ Sair/\[0\] üö™ Sair/g' security_tool.sh

# Adicionar a importa√ß√£o do script de integra√ß√£o de relat√≥rios
sed -i '/# Configura√ß√µes/a \# Importar script de integra√ß√£o de relat√≥rios HTML\nsource "$(dirname "$(readlink -f "$0")")/report_integration.sh"' security_tool.sh

# Modificar as fun√ß√µes de an√°lise para incluir a gera√ß√£o de relat√≥rios HTML
# Primeiro, vamos criar c√≥pias das fun√ß√µes originais com nomes diferentes
sed -i 's/analyze_file() {/analyze_file_internal() {/g' security_tool.sh
sed -i 's/analyze_url() {/analyze_url_internal() {/g' security_tool.sh
sed -i 's/analyze_domain() {/analyze_domain_internal() {/g' security_tool.sh
sed -i 's/analyze_hash() {/analyze_hash_internal() {/g' security_tool.sh
sed -i 's/analyze_email() {/analyze_email_internal() {/g' security_tool.sh
sed -i 's/analyze_header() {/analyze_header_internal() {/g' security_tool.sh

# Agora, vamos adicionar as novas fun√ß√µes que chamam as fun√ß√µes internas e geram relat√≥rios
cat << 'EOF' >> security_tool.sh

# Fun√ß√£o para an√°lise de arquivo com relat√≥rio HTML
analyze_file() {
    echo -e "${CYAN}üìÅ AN√ÅLISE DE ARQUIVO${NC}"
    echo "Digite o caminho do arquivo:"
    echo -n "‚û§ "
    read -r file_path
    
    if [[ -n "$file_path" ]]; then
        # Verificar se o arquivo existe
        if [[ ! -f "$file_path" ]]; then
            echo -e "${RED}Erro: Arquivo n√£o encontrado${NC}"
            log_message "Erro: Arquivo n√£o encontrado - $file_path"
            return 1
        fi
        
        analyze_file_with_report "$file_path"
    else
        echo -e "${RED}Erro: Caminho do arquivo n√£o pode estar vazio${NC}"
    fi
}

# Fun√ß√£o para an√°lise de URL com relat√≥rio HTML
analyze_url() {
    echo -e "${CYAN}üåê AN√ÅLISE DE URL${NC}"
    echo "Digite a URL para an√°lise:"
    echo -n "‚û§ "
    read -r url
    
    if [[ -n "$url" ]]; then
        analyze_url_with_report "$url"
    else
        echo -e "${RED}Erro: URL n√£o pode estar vazia${NC}"
    fi
}

# Fun√ß√£o para an√°lise de dom√≠nio com relat√≥rio HTML
analyze_domain() {
    echo -e "${CYAN}üè† AN√ÅLISE DE DOM√çNIO${NC}"
    echo "Digite o dom√≠nio para an√°lise:"
    echo -n "‚û§ "
    read -r domain
    
    if [[ -n "$domain" ]]; then
        analyze_domain_with_report "$domain"
    else
        echo -e "${RED}Erro: Dom√≠nio n√£o pode estar vazio${NC}"
    fi
}

# Fun√ß√£o para an√°lise de hash com relat√≥rio HTML
analyze_hash() {
    echo -e "${CYAN}üî¢ AN√ÅLISE DE HASH${NC}"
    echo "Digite o hash para an√°lise (MD5, SHA1 ou SHA256):"
    echo -n "‚û§ "
    read -r hash_value
    
    if [[ -n "$hash_value" ]]; then
        analyze_hash_with_report "$hash_value"
    else
        echo -e "${RED}Erro: Hash n√£o pode estar vazio${NC}"
    fi
}

# Fun√ß√£o para an√°lise de email com relat√≥rio HTML
analyze_email() {
    echo -e "${CYAN}üìß AN√ÅLISE DE EMAIL${NC}"
    echo "Digite o endere√ßo de email para an√°lise:"
    echo -n "‚û§ "
    read -r email
    
    if [[ -n "$email" ]]; then
        analyze_email_with_report "$email"
    else
        echo -e "${RED}Erro: Email n√£o pode estar vazio${NC}"
    fi
}

# Fun√ß√£o para an√°lise de cabe√ßalho de email com relat√≥rio HTML
analyze_header() {
    echo -e "${CYAN}üìã AN√ÅLISE DE CABE√áALHO DE EMAIL${NC}"
    echo "Digite o caminho do arquivo de cabe√ßalho:"
    echo -n "‚û§ "
    read -r header_file
    
    if [[ -n "$header_file" ]]; then
        if [[ ! -f "$header_file" ]]; then
            echo -e "${RED}Erro: Arquivo n√£o encontrado${NC}"
            log_message "Erro: Arquivo de cabe√ßalho n√£o encontrado - $header_file"
            return 1
        fi
        
        analyze_header_with_report "$header_file"
    else
        echo -e "${RED}Erro: Caminho do arquivo n√£o pode estar vazio${NC}"
    fi
}
EOF

# Adicionar a fun√ß√£o de gerenciamento de relat√≥rios ao switch case do menu principal
sed -i '/9) # Ver Estat√≠sticas/a \        10) # Relat√≥rios HTML\n            manage_reports\n            ;;' security_tool.sh

# Ajustar os n√∫meros das outras op√ß√µes no switch case
sed -i 's/10) # Ver Logs/11) # Ver Logs/g' security_tool.sh
sed -i 's/11) # Executar Testes/12) # Executar Testes/g' security_tool.sh
sed -i 's/12) # Ajuda/13) # Ajuda/g' security_tool.sh
sed -i 's/13) # Sobre/14) # Sobre/g' security_tool.sh

echo "Integra√ß√£o conclu√≠da com sucesso!"
echo "Agora voc√™ pode gerar relat√≥rios HTML bonitos e detalhados para suas an√°lises de seguran√ßa."
echo "Para testar, execute ./security_tool.sh e escolha qualquer op√ß√£o de an√°lise."
