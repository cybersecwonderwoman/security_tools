#!/bin/bash

# ========================================
# Menu Interativo - Security Analyzer Tool
# ========================================

# Configura√ß√µes b√°sicas
SCRIPT_DIR="$(dirname "$0")"

# Fun√ß√£o para exibir o menu principal
show_main_menu() {
    clear
    echo -e "${CYAN}"
    cat << "EOF"
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó            ‚ïë
‚ïë   ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ïö‚ïê‚ïê‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ïö‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïî‚ïù            ‚ïë
‚ïë   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë    ‚ïö‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù             ‚ïë
‚ïë   ‚ïö‚ïê‚ïê‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  ‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë     ‚ïö‚ñà‚ñà‚ïî‚ïù              ‚ïë
‚ïë   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë      ‚ñà‚ñà‚ïë               ‚ïë
‚ïë   ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù   ‚ïö‚ïê‚ïù      ‚ïö‚ïê‚ïù               ‚ïë
‚ïë                                                                              ‚ïë
‚ïë   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïó                                            ‚ïë
‚ïë   ‚ïö‚ïê‚ïê‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë                                            ‚ïë
‚ïë      ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë                                            ‚ïë
‚ïë      ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë                                            ‚ïë
‚ïë      ‚ñà‚ñà‚ïë   ‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó                                       ‚ïë
‚ïë      ‚ïö‚ïê‚ïù    ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù                                       ‚ïë
‚ïë                                                                              ‚ïë
‚ïë                    üõ°Ô∏è  FERRAMENTA AVAN√áADA DE SEGURAN√áA  üõ°Ô∏è                  ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
EOF
    echo -e "${NC}"
    
    echo -e "${PURPLE}                           @cybersecwonderwoman${NC}"
    echo ""
    echo -e "${YELLOW}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
    echo -e "${YELLOW}‚ïë                              MENU PRINCIPAL                                 ‚ïë${NC}"
    echo -e "${YELLOW}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
    echo ""
    
    echo -e "${GREEN}  [1] üìÅ Analisar Arquivo${NC}          - Verificar arquivos suspeitos"
    echo -e "${GREEN}  [2] üåê Analisar URL${NC}             - Verificar links maliciosos"
    echo -e "${GREEN}  [3] üè† Analisar Dom√≠nio${NC}         - Investigar dom√≠nios suspeitos"
    echo -e "${GREEN}  [4] üî¢ Analisar Hash${NC}            - Consultar hashes em bases de dados"
    echo -e "${GREEN}  [5] üìß Analisar Email${NC}           - Verificar endere√ßos de email"
    echo -e "${GREEN}  [6] üìã Analisar Cabe√ßalho${NC}       - Analisar headers de email"
    echo -e "${GREEN}  [7] üåê Analisar IP${NC}             - Verificar endere√ßos IP suspeitos"
    echo ""
    echo -e "${BLUE}  [8] ‚öôÔ∏è  Configurar APIs${NC}          - Configurar chaves de acesso"
    echo -e "${BLUE}  [9] üìä Ver Estat√≠sticas${NC}         - Relat√≥rios de uso"
    echo -e "${BLUE}  [10] üìù Ver Logs${NC}                 - Visualizar logs de an√°lise"
    echo -e "${BLUE}  [11] üß™ Executar Testes${NC}         - Testar funcionalidades"
    echo ""
    echo -e "${CYAN}  [12] üìö Ajuda${NC}                   - Manual de uso"
    echo -e "${CYAN}  [13] ‚ÑπÔ∏è  Sobre${NC}                   - Informa√ß√µes da ferramenta"
    echo ""
    echo -e "${RED}  [0] üö™ Sair${NC}                     - Encerrar programa"
    echo ""
    echo -e "${YELLOW}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
    echo -e "${YELLOW}‚ïë Digite o n√∫mero da op√ß√£o desejada:                                          ‚ïë${NC}"
    echo -e "${YELLOW}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
    echo -n -e "${WHITE}‚û§ ${NC}"
}

# Fun√ß√£o para an√°lise de arquivo
menu_analyze_file() {
    echo -e "${BLUE}üìÅ AN√ÅLISE DE ARQUIVO${NC}"
    echo "Digite o caminho completo do arquivo:"
    echo -n "‚û§ "
    read -r file_path
    
    if [[ -n "$file_path" ]]; then
        echo -e "${YELLOW}Iniciando an√°lise do arquivo: $file_path${NC}"
        ./security_analyzer.sh -f "$file_path"
    else
        echo -e "${RED}Erro: Caminho do arquivo n√£o informado${NC}"
    fi
    
    echo ""
    echo "Pressione ENTER para continuar..."
    read -r
}

# Fun√ß√£o para an√°lise de URL
menu_analyze_url() {
    echo -e "${BLUE}üåê AN√ÅLISE DE URL${NC}"
    echo "Digite a URL para an√°lise:"
    echo -n "‚û§ "
    read -r url
    
    if [[ -n "$url" ]]; then
        echo -e "${YELLOW}Iniciando an√°lise da URL: $url${NC}"
        ./security_analyzer.sh -u "$url"
    else
        echo -e "${RED}Erro: URL n√£o informada${NC}"
    fi
    
    echo ""
    echo "Pressione ENTER para continuar..."
    read -r
}

# Fun√ß√£o para an√°lise de dom√≠nio
menu_analyze_domain() {
    echo -e "${BLUE}üè† AN√ÅLISE DE DOM√çNIO${NC}"
    echo "Digite o dom√≠nio para an√°lise:"
    echo -n "‚û§ "
    read -r domain
    
    if [[ -n "$domain" ]]; then
        echo -e "${YELLOW}Iniciando an√°lise do dom√≠nio: $domain${NC}"
        ./security_analyzer.sh -d "$domain"
    else
        echo -e "${RED}Erro: Dom√≠nio n√£o informado${NC}"
    fi
    
    echo ""
    echo "Pressione ENTER para continuar..."
    read -r
}

# Fun√ß√£o para an√°lise de hash
menu_analyze_hash() {
    echo -e "${BLUE}üî¢ AN√ÅLISE DE HASH${NC}"
    echo "Digite o hash para an√°lise (MD5, SHA1, SHA256):"
    echo -n "‚û§ "
    read -r hash
    
    if [[ -n "$hash" ]]; then
        echo -e "${YELLOW}Iniciando an√°lise do hash: $hash${NC}"
        ./security_analyzer.sh -h "$hash"
    else
        echo -e "${RED}Erro: Hash n√£o informado${NC}"
    fi
    
    echo ""
    echo "Pressione ENTER para continuar..."
    read -r
}

# Fun√ß√£o para an√°lise de email
menu_analyze_email() {
    echo -e "${BLUE}üìß AN√ÅLISE DE EMAIL${NC}"
    echo "Digite o endere√ßo de email para an√°lise:"
    echo -n "‚û§ "
    read -r email
    
    if [[ -n "$email" ]]; then
        echo -e "${YELLOW}Iniciando an√°lise do email: $email${NC}"
        ./security_analyzer.sh -e "$email"
    else
        echo -e "${RED}Erro: Email n√£o informado${NC}"
    fi
    
    echo ""
    echo "Pressione ENTER para continuar..."
    read -r
}

# Fun√ß√£o para an√°lise de cabe√ßalho
menu_analyze_header() {
    echo -e "${BLUE}üìã AN√ÅLISE DE CABE√áALHO DE EMAIL${NC}"
    echo "Digite o caminho do arquivo com cabe√ßalhos de email:"
    echo -n "‚û§ "
    read -r header_file
    
    if [[ -n "$header_file" ]]; then
        echo -e "${YELLOW}Iniciando an√°lise do cabe√ßalho: $header_file${NC}"
        ./security_analyzer.sh --header "$header_file"
    else
        echo -e "${RED}Erro: Arquivo de cabe√ßalho n√£o informado${NC}"
    fi
    
    echo ""
    echo "Pressione ENTER para continuar..."
    read -r
}

# Fun√ß√£o para an√°lise de IP
menu_analyze_ip() {
    clear
    echo -e "${BLUE}üåê AN√ÅLISE DE IP${NC}"
    echo "Digite o endere√ßo IP para an√°lise:"
    echo -n "‚û§ "
    read -r ip_address
    
    if [[ -n "$ip_address" ]]; then
        echo -e "${YELLOW}Iniciando an√°lise do IP: $ip_address${NC}"
        echo ""
        
        # Executar an√°lise usando o security_analyzer.sh
        if [[ -f "$(dirname "$0")/security_analyzer.sh" ]]; then
            "$(dirname "$0")/security_analyzer.sh" --ip "$ip_address"
        else
            echo -e "${RED}Erro: Script security_analyzer.sh n√£o encontrado${NC}"
            echo "Por favor, certifique-se de que o script security_analyzer.sh est√° no mesmo diret√≥rio."
        fi
    else
        echo -e "${RED}Erro: IP n√£o informado${NC}"
    fi
    
    echo ""
    echo "Pressione ENTER para continuar..."
    read -r
}

# Fun√ß√£o para configurar APIs
menu_configure_apis() {
    echo -e "${BLUE}‚öôÔ∏è CONFIGURA√á√ÉO DE APIs${NC}"
    echo "Iniciando configura√ß√£o das chaves de API..."
    echo ""
    ./security_analyzer.sh --config
    
    echo ""
    echo "Pressione ENTER para continuar..."
    read -r
}

# Fun√ß√£o para ver estat√≠sticas
menu_view_stats() {
    echo -e "${BLUE}üìä ESTAT√çSTICAS DE USO${NC}"
    echo ""
    
    if [[ -f "$LOG_FILE" ]]; then
        echo "=== Resumo de An√°lises ==="
        echo "Total de an√°lises: $(grep -c "analisado" "$LOG_FILE" 2>/dev/null || echo "0")"
        echo "Arquivos analisados: $(grep -c "Arquivo analisado" "$LOG_FILE" 2>/dev/null || echo "0")"
        echo "URLs analisadas: $(grep -c "URL analisada" "$LOG_FILE" 2>/dev/null || echo "0")"
        echo "Dom√≠nios analisados: $(grep -c "Dom√≠nio analisado" "$LOG_FILE" 2>/dev/null || echo "0")"
        echo "Hashes analisados: $(grep -c "Hash analisado" "$LOG_FILE" 2>/dev/null || echo "0")"
        echo "Emails analisados: $(grep -c "Email analisado" "$LOG_FILE" 2>/dev/null || echo "0")"
        echo ""
        echo "=== √öltimas 5 An√°lises ==="
        tail -5 "$LOG_FILE" 2>/dev/null || echo "Nenhum log encontrado"
    else
        echo "Nenhum log de an√°lise encontrado ainda."
    fi
    
    echo ""
    echo "Pressione ENTER para continuar..."
    read -r
}

# Fun√ß√£o para ver logs
menu_view_logs() {
    echo -e "${BLUE}üìù VISUALIZAR LOGS${NC}"
    echo ""
    
    if [[ -f "$LOG_FILE" ]]; then
        echo "=== √öltimas 20 entradas do log ==="
        tail -20 "$LOG_FILE"
        echo ""
        echo "Log completo em: $LOG_FILE"
    else
        echo "Nenhum arquivo de log encontrado."
    fi
    
    echo ""
    echo "Pressione ENTER para continuar..."
    read -r
}

# Fun√ß√£o para executar testes
menu_run_tests() {
    echo -e "${BLUE}üß™ EXECUTAR TESTES${NC}"
    echo "Iniciando testes automatizados..."
    echo ""
    
    if [[ -f "./examples/test_samples.sh" ]]; then
        ./examples/test_samples.sh
    else
        echo "Arquivo de testes n√£o encontrado."
    fi
    
    echo ""
    echo "Pressione ENTER para continuar..."
    read -r
}

# Fun√ß√£o para exibir ajuda
menu_show_help() {
    echo -e "${BLUE}üìö AJUDA${NC}"
    echo ""
    ./security_analyzer.sh --help
    
    echo ""
    echo "Pressione ENTER para continuar..."
    read -r
}

# Fun√ß√£o para exibir informa√ß√µes sobre a ferramenta
menu_show_about() {
    clear
    echo -e "${CYAN}"
    cat << "EOF"
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë                              SOBRE A FERRAMENTA                             ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
EOF
    echo -e "${NC}"
    
    echo -e "${GREEN}Security Analyzer Tool v1.0${NC}"
    echo -e "${YELLOW}Ferramenta Avan√ßada de An√°lise de Seguran√ßa da Informa√ß√£o${NC}"
    echo ""
    echo -e "${BLUE}Desenvolvido por: @cybersecwonderwoman${NC}"
    echo -e "${BLUE}Data: Julho 2025${NC}"
    echo -e "${BLUE}Linguagem: Bash${NC}"
    echo ""
    echo -e "${GREEN}Funcionalidades:${NC}"
    echo "‚Ä¢ An√°lise de arquivos maliciosos"
    echo "‚Ä¢ Verifica√ß√£o de URLs suspeitas"
    echo "‚Ä¢ Investiga√ß√£o de dom√≠nios"
    echo "‚Ä¢ Consulta de hashes em bases de dados"
    echo "‚Ä¢ An√°lise de emails e cabe√ßalhos"
    echo ""
    echo -e "${GREEN}Fontes de Threat Intelligence:${NC}"
    echo "‚Ä¢ VirusTotal ‚Ä¢ URLScan.io ‚Ä¢ Shodan"
    echo "‚Ä¢ ThreatFox ‚Ä¢ AlienVault OTX ‚Ä¢ Hybrid Analysis"
    echo "‚Ä¢ MalShare ‚Ä¢ Joe Sandbox"
    echo ""
    echo -e "${PURPLE}@cybersecwonderwoman${NC}"
    echo ""
    echo "Pressione ENTER para continuar..."
    read -r
}

# Fun√ß√£o principal do menu
main_menu() {
    while true; do
        show_main_menu
        read -r choice
        
        case $choice in
            1) menu_analyze_file ;;
            2) menu_analyze_url ;;
            3) menu_analyze_domain ;;
            4) menu_analyze_hash ;;
            5) menu_analyze_email ;;
            6) menu_analyze_header ;;
            7) menu_analyze_ip ;;
            8) menu_configure_apis ;;
            9) menu_view_stats ;;
            10) menu_view_logs ;;
            11) menu_run_tests ;;
            12) menu_show_help ;;
            13) menu_show_about ;;
            0) 
                echo -e "${GREEN}Obrigado por usar o Security Analyzer Tool!${NC}"
                echo -e "${PURPLE}@cybersecwonderwoman${NC}"
                exit 0
                ;;
            *)
                echo -e "${RED}Op√ß√£o inv√°lida! Pressione ENTER para continuar...${NC}"
                read -r
                ;;
        esac
    done
}

# Verificar se est√° no diret√≥rio correto
if [[ ! -f "./security_analyzer.sh" ]]; then
    echo -e "${RED}Erro: Execute este menu a partir do diret√≥rio da aplica√ß√£o${NC}"
    echo "Certifique-se de que o arquivo security_analyzer.sh est√° no mesmo diret√≥rio."
    exit 1
fi

# Executar menu principal
main_menu
