#!/bin/bash

# ========================================
# Script de integra√ß√£o de relat√≥rios HTML para Security Analyzer Tool
# ========================================

# Importar fun√ß√µes do script de relat√≥rios HTML
source "$(dirname "$(readlink -f "$0")")/html_report.sh"

# Fun√ß√£o para capturar a sa√≠da de uma an√°lise e gerar um relat√≥rio HTML
capture_and_report() {
    local analysis_type="$1"
    local target="$2"
    local analysis_function="$3"
    
    # Criar arquivo tempor√°rio para capturar a sa√≠da
    local temp_output=$(mktemp)
    
    # Executar a fun√ß√£o de an√°lise e capturar a sa√≠da
    $analysis_function "$target" | tee "$temp_output"
    
    # Gerar relat√≥rio HTML com a sa√≠da capturada
    local analysis_text=$(cat "$temp_output")
    local report_file=$(generate_html_report "$analysis_type" "$target" "$analysis_text")
    
    # Remover arquivo tempor√°rio
    rm -f "$temp_output"
    
    # Perguntar se deseja abrir o relat√≥rio no navegador
    echo
    echo -e "${CYAN}Relat√≥rio HTML gerado: $report_file${NC}"
    echo -n "Deseja abrir o relat√≥rio no navegador? (s/n): "
    read -r open_browser
    
    if [[ "$open_browser" == "s" || "$open_browser" == "S" ]]; then
        open_report "$report_file"
    fi
}

# Fun√ß√£o para analisar arquivo com relat√≥rio HTML
analyze_file_with_report() {
    local file_path="$1"
    capture_and_report "Arquivo" "$file_path" "analyze_file_internal"
}

# Fun√ß√£o para analisar URL com relat√≥rio HTML
analyze_url_with_report() {
    local url="$1"
    capture_and_report "URL" "$url" "analyze_url_internal"
}

# Fun√ß√£o para analisar dom√≠nio com relat√≥rio HTML
analyze_domain_with_report() {
    local domain="$1"
    capture_and_report "Dom√≠nio" "$domain" "analyze_domain_internal"
}

# Fun√ß√£o para analisar hash com relat√≥rio HTML
analyze_hash_with_report() {
    local hash="$1"
    capture_and_report "Hash" "$hash" "analyze_hash_internal"
}

# Fun√ß√£o para analisar email com relat√≥rio HTML
analyze_email_with_report() {
    local email="$1"
    capture_and_report "Email" "$email" "analyze_email_internal"
}

# Fun√ß√£o para analisar cabe√ßalho de email com relat√≥rio HTML
analyze_header_with_report() {
    local header_file="$1"
    capture_and_report "Cabe√ßalho de Email" "$header_file" "analyze_header_internal"
}

# Fun√ß√£o para analisar IP com relat√≥rio HTML
analyze_ip_with_report() {
    local ip="$1"
    capture_and_report "IP" "$ip" "analyze_ip_internal"
}

# Fun√ß√£o para listar relat√≥rios gerados
list_reports() {
    local reports_dir="$HOME/.security_analyzer/reports"
    
    echo -e "${CYAN}Relat√≥rios Gerados:${NC}"
    echo
    
    if [[ ! -d "$reports_dir" || -z "$(ls -A "$reports_dir")" ]]; then
        echo "Nenhum relat√≥rio encontrado."
        return
    fi
    
    echo -e "ID\t\t\tData\t\tTipo\t\tAlvo"
    echo -e "----------------------------------------------------------------------"
    
    for report in "$reports_dir"/*.html; do
        local report_name=$(basename "$report" .html)
        local report_date=$(echo "$report_name" | cut -d'-' -f2)
        local report_date_formatted="${report_date:0:4}-${report_date:4:2}-${report_date:6:2}"
        
        # Extrair tipo e alvo do arquivo HTML
        local analysis_type=$(grep -o '<strong>Tipo de An√°lise:</strong> [^<]*' "$report" | sed 's/<strong>Tipo de An√°lise:<\/strong> //')
        local target=$(grep -o '<strong>Alvo:</strong> [^<]*' "$report" | sed 's/<strong>Alvo:<\/strong> //')
        
        echo -e "$report_name\t$report_date_formatted\t$analysis_type\t$target"
    done
    
    echo
    echo -n "Digite o ID do relat√≥rio para abrir (ou Enter para voltar): "
    read -r report_id
    
    if [[ -n "$report_id" && -f "$reports_dir/$report_id.html" ]]; then
        open_report "$reports_dir/$report_id.html"
    fi
}

# Fun√ß√£o para gerenciar relat√≥rios
manage_reports() {
    while true; do
        echo -e "${CYAN}"
        cat << "EOF"
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë                         GERENCIAMENTO DE RELAT√ìRIOS                         ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
EOF
        echo -e "${NC}"
        echo "  [1] üìã Listar Relat√≥rios        - Ver relat√≥rios gerados"
        echo "  [2] üåê Iniciar Servidor         - Iniciar servidor web"
        echo "  [3] üõë Parar Servidor           - Parar servidor web"
        echo "  [4] üóëÔ∏è  Excluir Relat√≥rio        - Remover relat√≥rio espec√≠fico"
        echo "  [5] üóëÔ∏è  Excluir Todos            - Remover todos os relat√≥rios"
        echo
        echo "  [0] üîô Voltar                   - Retornar ao menu principal"
        echo
        echo -n "Escolha uma op√ß√£o: "
        read -r option
        
        case "$option" in
            1)
                list_reports
                ;;
            2)
                start_report_server
                ;;
            3)
                stop_report_server
                ;;
            4)
                echo -n "Digite o ID do relat√≥rio a ser exclu√≠do: "
                read -r report_id
                if [[ -n "$report_id" && -f "$HOME/.security_analyzer/reports/$report_id.html" ]]; then
                    rm -f "$HOME/.security_analyzer/reports/$report_id.html"
                    echo "Relat√≥rio exclu√≠do com sucesso."
                else
                    echo "Relat√≥rio n√£o encontrado."
                fi
                ;;
            5)
                echo -n "Tem certeza que deseja excluir TODOS os relat√≥rios? (s/n): "
                read -r confirm
                if [[ "$confirm" == "s" || "$confirm" == "S" ]]; then
                    rm -f "$HOME/.security_analyzer/reports"/*.html
                    echo "Todos os relat√≥rios foram exclu√≠dos."
                fi
                ;;
            0)
                return
                ;;
            *)
                echo "Op√ß√£o inv√°lida."
                ;;
        esac
        
        echo
        echo -n "Pressione Enter para continuar..."
        read
    done
}
